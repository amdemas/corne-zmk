/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

// Layer Definitions
#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&mt {
    tapping-term-ms = <201>;
    flavor = "tap-preferred";
 };
&sk {
     release-after-ms = <2000>;
     quick-release;
 };


// Helper for defining combos
#define COMBO(NAME, TIMEOUT, BINDINGS, KEYPOS, LAYERS) \
combo_##NAME { \
    timeout-ms = <TIMEOUT>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
};


/ {
    chosen {
        zmk,matrix_transform = &five_column_transform;
    };

    combos {
        compatible = "zmk,combos";
        COMBO(tab, 50, &kp TAB, 0 1, 0)
        COMBO(escape, 50, &kp ESC, 10 11, 0)
        COMBO(backspace, 50, &kp BSPC, 8 9, 0)
        COMBO(apos, 50, &kp APOS, 18 19, 0)
    };

    behaviors {
        aml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPA_MODS_L";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        amr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPA_MODS_R";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_L";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_R";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            label = "BASE";
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //|    Q     |    W     |    E     |    R     |    T     |   |    Y     |    U     |    I     |    O     |    P     |
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //|    A     |    S     |    D     |    F     |    G     |   |    H     |    J     |    K     |    L     |    ;     |
            &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //|    Z     |    X     |    C     |    V     |    B     |   |    N     |    M     |    ,     |    .     |    /     |
           &aml LCTRL Z &aml LGUI X &aml LALT C  &kp V  &kp B          &kp N      &kp M   &amr RALT COMMA &amr RGUI DOT &amr LCTRL FSLH
        //╰──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────╯
        //                      |   GUI    |   LSFT   |   ENT    |   |  SPACE   |  RSHFT   |   GUI    |
                                  &kp LGUI  &kp LSHFT &lt LOWER RET  &lt RAISE SPACE &kp RSHFT &kp RGUI
        //                      ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        lower_layer {
            label = "LOWER";
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //|    1     |    2     |    3     |    4     |    5     |   |    6     |    7     |    8     |    9     |    0     |
             &kp N1    &kp N2     &kp N3     &kp N4     &kp N5         &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //|   MUTE   | VOL DWN  |  VOL UP  |   NEXT   |   PLAY   |   |    UP    |   DOWN   |   LEFT   |   RIGHT  |          |
           &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp K_NEXT &kp C_PLAY  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //|   UNDO   |   CUT    |   COPY   |   PASTE  |  INSERT  |   |   CAPS   |          |          |          |          |
           &kp K_UNDO &kp K_CUT  &kp K_COPY &kp K_PASTE &kp INS        &kp CAPS    &trans     &trans     &trans     &trans
        //╰──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────╯
        //                      |          |          |          |   |          |          |          |
                                  &trans     &trans     &trans         &trans     &trans     &trans
        //                      ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        raise_layer {
            label = "RAISE";
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //|    !     |    @     |    #     |    $     |    %     |   |    ^     |    &     |    *     |    (     |     )    |
            &kp EXCL   &kp AT     &kp HASH   &kp DLLR  &kp PRCNT      &kp CARET   &kp AMPS  &kp ASTRK   &kp LPAR   &kp RPAR
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //|    _     |    +     |    =     |    |     |    -     |   |   HOME   |   PGDN   |   PGUP   |   END    |   PSCRN  |
            &kp UNDER  &kp PLUS   &kp EQUAL  &kp PIPE   &kp MINUS       &kp HOME  &kp PG_DN  &kp PG_UP   &kp END   &kp PSCRN
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //|    \     |    <     |    {     |    (     |    [     |   |    ]     |    )     |    }     |    >     |    /     |
            &kp BSLH    &kp LT    &kp LBRC   &kp LPAR   &kp LBKT       &kp RBKT   &kp RPAR   &kp RBRC    &kp GT    &kp FSLH
        //╰──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────╯
        //                      |          |          |          |   |          |          |          |
                                    &trans     &trans     &trans         &trans     &trans     &trans
        //                      ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        adjust_layer {
            label = "ADJUST";
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //|    F1    |    F2    |    F3    |    F4    |    F5    |   |    F6    |    F7    |    F8    |    F9    |   F10    |
            &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6     &kp F7     &kp F8     &kp F9     &kp F10
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //|          |          |          |          |          |   |          |          |          |    F11   |   F12    |
            &trans     &trans     &trans     &trans     &trans         &trans     &trans     &trans     &kp F11    &kp F12
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //|  RESET   |  BTCLR   | USB/BT   |          |          |   |          |          |          |          | RESET    |
            &reset    &bt BT_CLR &out OUT_TOG &trans    &trans         &trans     &trans     &trans     &trans     &reset
        //╰──────────┴──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────╯
        //                      |          |          |          |   |          |          |          |
                                 &bootloader  &trans     &trans        &trans     &trans    &bootloader
        //                      ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;

        };
    };
};

&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};